# ML container for building DNNMark cuDNN8 version 
FROM nvidia/cuda:11.1-cudnn8-devel-ubuntu18.04
LABEL maintainer="Peter Bryzgalov"
LABEL date="2021/11/10"


RUN apt-get update && apt-get install -y build-essential software-properties-common \
    vim python3 python3-dev python3-pip git sudo wget vim \
    python3 python3-dev python3-pip python3-setuptools \
    cmake libgflags-dev libgoogle-glog-dev bc && \
    pip3 install --no-cache-dir --upgrade pip && \
    # delete cache and tmp files
    apt-get clean && \
    apt-get autoclean && \
    rm -rf /var/cache/* && \
    rm -rf /tmp/* && \
    rm -rf /var/tmp/* && \
    rm -r /var/lib/apt/lists/*; 
ENV CUDA_HOME="/usr/local/cuda-11.1"
ENV PATH="${PATH}:${CUDA_HOME}/bin"
ENV LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${CUDA_HOME}/lib64"

# Install more Python packages
RUN pip3 install numpy matplotlib pandas scipy seaborn jupyter jupyter_contrib_nbextensions yapf psutil sklearn pick
RUN jupyter contrib nbextension install --system

# Install Pytorch
RUN pip3 install torch==1.9.1+cu111 torchvision==0.10.1+cu111 torchaudio==0.9.1 -f https://download.pytorch.org/whl/torch_stable.html
RUN pip3 install torchsummary
RUN echo "Installed PyTorch"
RUN pip3 freeze | grep -i torch

# Check CUDA, cuDNN and driver versions
ADD dockerfiles/get_nvidia_versions.sh /
RUN chmod +x /get_nvidia_versions.sh
RUN env | grep -i cuda
RUN /get_nvidia_versions.sh
