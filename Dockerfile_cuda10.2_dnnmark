# ML container with DNNMark. v1.09
FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04
LABEL maintainer="Peter Bryzgalov"

ENV dnnmark_v="1.09"

RUN apt-get update && apt-get install -y build-essential software-properties-common \
    vim python3 python3-dev python3-pip git sudo wget vim \
    python3 python3-dev python3-pip python3-setuptools \
    cmake libgflags-dev libgoogle-glog-dev bc && \
    pip3 install --no-cache-dir --upgrade pip && \
    # delete cache and tmp files
    apt-get clean && \
    apt-get autoclean && \
    rm -rf /var/cache/* && \
    rm -rf /tmp/* && \
    rm -rf /var/tmp/* && \
    rm -r /var/lib/apt/lists/*; 
ENV CUDA_HOME="/usr/local/cuda-10.2"
ENV PATH="${PATH}:${CUDA_HOME}/bin"
ENV LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${CUDA_HOME}/lib64"

# Install TF
RUN pip3 install tensorflow-gpu

# Install more Python packages
RUN pip3 install numpy matplotlib pandas scipy seaborn jupyter jupyter_contrib_nbextensions yapf psutil sklearn pick
RUN jupyter contrib nbextension install --system

# Install Chainer 4.0.0
RUN pip3 install chainer==4.0.0 cupy==4.0.0

# Install Pytorch 1.4.0
RUN pip3 install torch==1.4.0 torchvision==0.5.0 torchsummary==1.5.1

# Check CUDA, cuDNN and driver versions
ADD dockerfiles/get_nvidia_versions.sh /
RUN env | grep -i cuda
RUN /get_nvidia_versions.sh

RUN echo "Installing DNNMark experimental branch"

WORKDIR /
RUN git clone https://github.com/pyotr777/DNNMark.git
RUN mkdir -p ${HOME}/cudnn
WORKDIR /DNNMark
RUN git checkout experimental
RUN ./setup.sh CUDA
WORKDIR /DNNMark/build
RUN make

# Permissions
RUN chmod -R 755 /DNNMark
# RUN chmod a+w /DNNMark
ADD dockerfiles/conf_tmp.dnnmark /DNNMark/conf_tmp.dnnmark
RUN chmod a+w /DNNMark/conf_tmp.dnnmark
RUN echo "Installed DNNMark v${dnnmark_v}."




